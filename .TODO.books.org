#+PRIORITIES: 1 10 5

* Books To Read
** Fiction
*** TODO [#2] The Three Body Problem
**** TODO The second book
**** TODO The third book
*** TODO [#7] Reacher, by Lee Child
*** TODO [#8] The Idiot, Fyodor Dostoevsky
*** TODO [#8] The Brothers Karamozov, Fyodor Dostoevsky
*** TODO The Silkworn, Robert Gailbraith
** Non-Fiction
*** TODO [#1] Guerilla Mindset (borrowed)
Read and return to andy
*** TODO [#10] Five Days at Memorial
*** TODO The Birth of Plenty
*** TODO In the Plex by Steven Levy
** Language
*** TODO [#9] The Language Construction Kit
*** Latin
**** TODO Puer Romanus
**** TODO [#4] Ossa Latinitatis Sola
**** TODO Ossium Carnes Multae
**** TODO [#2] Getting Started With Latin
**** TODO [#2] Keep Going With Latin
**** TODO [#2] Familia Romana
***** TODO [#3] Roma Aeterna
**** TODO [#9] Commentarii De Bello Gallico, by Julius M.F. Caesar
** Life Improvement
*** DONE Dare To Forgive
<2024-01-11 Thu> Good book

<2023-08-21 Mon> Up to chapter 13

*** TODO Stop Walking On Eggshells
*** TODO A Lasting Promise
*** TODO Should I Stay or Should I go?
*** TODO No Contact
*** TODO [#2] 12 Rules for Life, by Jordan Peterson
*** TODO Deep Work
*** TODO Never Split The Difference
*** TODO Beyond Reason, by Roger Fisher and Daniel Shapiro
*** TODO All About Asset Allocation
*** TODO [#1] The Power of Habit by Duhigg
** Divorce
*** TODO Difficult Questions Kids Ask and are too afraid to ask about Divorce, by Meg Schneider
*** TODO Dinosaurs Divorce, by Laurie Brow and Marc Brown
** For Kids
*** Social Skills, Activities for Kids,by Natasha Daniels
*** Lauren Ipsum, A Story about computer science and other impossible things, by Carlos Bueno
**** Current page
***** <2023-11-02 Thu> Page 35.
Chapter 4 with my kids was a lot of fun.  It talked about recursion, limits, and different notions of inifinty.
** Logic/CS/Philosophy
*** TODO [#3] Sophie's World
*** TODO The Annotated Turing
*** TODO The Universal Computer
*** TODO [#2] The Stoic Way Of Life
*** TODO The Story of Philosophy, by Bryan Magee
** Computers
*** TODO Learn to Program with Assembly, Jonathan Bartlett
(His programming from the ground up book was great)
*** TODO Programming with 64-bit ARM Assembly Language
*** TODO ARM Assembly Language, Fundamentals and Techniques
*** TODO Profession Cuda C Progmamming, by Wrox

**** Current page
67
**** <2023-08-21 Mon> Up to page 46
***** Learned today about GPU memory, and pushing data from main memory to GPU memory.
***** Learned about task-parallell vs data parallel, and the advantages of hetergenious computing.
***** Learned about how threads determine which data they should act upon without having them explictly pass parameters
***** Learned that memory transfer operations are blocking, but tasking kernel threads are not blocking
Like threads, or like linux "sync", sometimes you need to make a call to block to ensure
all threads have finished their work on the GPU before the CPU should resume.
**** <2023-08-22 Tue> Through page 61
***** Learned that for matrix addition, that the block and grid size affects perfomance
I'm not quite sure why, but the book says chapter 3 will explain it from a hardware perspective
**** <2023-08-23 Wed> Chapter 3
Learning about how the threads within a certain subgroup all have the same instruction executed,
and stalls are used on branches not taken in that thread affects performance, was interesting to read
about.  Learning about how the hardware actually works is interesting, but it's a lot to take in.
I think the grid/block/thread stuff will all make more sense once I run cuda on datasets that I care
about, using nvprof, or the graphical visualizer.
**** <2023-08-23 Wed> Up to chapter 4
Chapter 3 was interesting, especially about warps.  I had no idea how much work is required
to get optimal performance.  I'm curious now to reread my openGL books, especially the section
that talk about compute shaders.  I remember reading those sections years ago and having no idea
what was going on.  But now that I know a bit more about graphics hardware, and how it's used
for general purpose computation, perhaps those sections will make more sense to me now.  Or
perhaps I should read up on OpenCL as well.


*** TODO Code, Second Editon
*** TODO Getting Started with LLVM Core Libraries
*** TODO Software Design For Flexibility, by Hanson and Sussman
*** TODO USB Complete
*** TODO RHCSA RedHad Enterprise Linux 8
*** DONE Introduction to programming using Lambda Calculus
I threw this book away
*** TODO The Little Typer
*** TODO The Haskell School of Music, Paul Hudak
*** Machine Learning
**** TODO Hands-On Machine Learning with Scikit-Learn, Keras, and Tensorflow
**** TODO Deep Learning with Python
**** TODO Deep Learning with PyTorch by Stevens, Antiga, Viehmann
*** Languages
**** TODO [#1] Programming Rust
**** TODO [#3] Head First Kotlin
**** TODO [#3] Head First Go
**** TODO [#3] Practical Haskell
**** TODO [#2] Mastering Swift, 5th edition
**** TODO [#8] Effective Modern C++
**** TODO [#7] C++ Templates The Complete Guide
**** TODO Android Programming, the Big Nerd Ranch Guide
*** Lang Implementations
**** TODO [#7] CPython Internals
**** TODO [#5] Crafting Interpreters
*** Linux
**** TODO Advanced programming in the unix environment
**** TODO Linux Kernel Development
*** VMs
**** TODO Vagrant
**** TODO [#4] Docker
*** Graphics
**** TODO [#9] Vulkan a programming guide
**** TODO [#9] Vulkan Cookbook
**** TODO [#8] OpenGL RedBook
As a refresher
**** TODO [#8] OpenGL BlueBook
As a refresher
**** DONE [#9] Computer Graphics with OpenGL v4 by Hearn Baker
<2024-08-10 Sat> I had bought this book because someone else was going to teach my class
It's old code, and in my opinion only ok.  It is good reference material for things
that happen in the OpenGL pipeline that I don't cover in the book, but I'm not
going to read this other than for reference.
*** Computer Architecture
**** TODO [#4] Computer Organization and Design, Hennessy and Patterson
**** TODO [#4] Digital Design and Computer Architecture
**** TODO Modern Computer Architecture and Organization
** CS Education
*** TODO Python For Kids, by Jason Briggs
*** TODO Class Computer Science Problems in Python, by David Kopec
*** TODO Daily Coding Problems, by Alex Miller and Lawrence Wu
** Physics
*** TODO [#2] The Theoretical Minimum by Susskind and Hrabovsky
*** TODO The Theoretical Minimum: Classical Mechanics by Susskind and Hrabovsky
*** TODO The Theoretical Minimum: Quantum Mechanics by Susskind and Friedman
*** TODO The Theoretical Minimum: Special Relativity and Classical Field Theory by Susskind and Hrabovsky
*** TODO The Theoretical Minimum: General Relativity by Susskind and Hrabovsky
*** DONE Basic Electricity by US Navy
<2024-01-27 Sat> I threw this book away
** Chemistry
*** TODO [#8] Chemistry by Silberberg and Amatesis
*** TODO [#10] Organic Chemistry
** Math
*** TODO [#3] The Moscow Puzzles
*** TODO [#4] 300+ Mathematical Pattern Puzzles
*** TODO Textbook Pre Algebra, based off of Liam's book
*** TODO Textbook Algebra 1
*** TODO Textbook Geometry
*** TODO Textbook Algebra 2
*** TODO Textbook Precalculus by Carter, Cuevas, Day, Malloy, Bryan, Holiday and Hovsepian
*** TODO Calculus by Morris Kline
*** TODO Logicomix, by Apostolos Doxiadis and Christos H. Papadimitriou
*** TODO Vector Calculus, by Susan Jane Colley
*** TODO [#1] Linear and Geometric Algebra, by Alan MacDonald
This book is hard but good, I should start from the beginning again and do all exercises
*** TODO [#1] Vector and Geometric Calculus, by Alan MacDonald
*** TODO [#8] Extension Theory, by Hermann Grassman
This is the foundation for a lot of multivariate work, and Clifford expanded
on Grassman's and Hamilton's work to create geometric Algebra.  In particular
I want to see the section on inner products, as for instance in Geometric Algebra,
I still don't know how to take the dot product of a vector and a bivector, without
resorting to upgrading them to a geometric product minus the wedge product
*** TODO Geometric Algebra for Computer Scientists, by Dorst et. al.
*** TODO That Geometric Algebra book that I have on Kindle, it's good.
*** TODO Foundations of Geometric Algebra Computing, by Hildenbrand
*** TODO Clifford Algebra to Geometric Calculus, by Hestenes and Sobczyk
I'm looking forward to getting to understand enough of the material to take this
book on
*** TODO New Foundations in Mathematics, Sobczyk
*** TODO An Introduction to Geometric Algebra and Geometric Calculus, M.D. Taylor
*** TODO [#2] Projective Geometric Algebra Illuminated, Eric Lengyel
*** TODO Elementary Differential Equations and Bounday Value Problems
*** TODO Introduction to Linear Algebra, Gilbert Strang
*** TODO Linear Algebra and Learning from Data, Gilbret Strang
*** TODO [#5] Div Grad Curl and all that,  Schey
*** TODO An Introduction cto Information Theory, by John R. Pierce
*** TODO Methods of Multivariate Analysis by R9cencher and Christensen
*** TODO Signals and Systems Schaums
*** TODO Design of Experiments
** Science
*** TODO [#4] Origin Of Time, by Stephen Hawking
*** TODO Chasing New Horizons
** SciFi
*** TODO Snow Crash, by Neal Stephenson
*** TODO Cryptonomicon, by Neal Stephenson
*** TODO Foundation, by Asimov
*** TODO Diasporo, by Greg Egan
** Software
*** TODO The Complete Guide to Blender Graphics
*** TODO Logic Pro X 10.5
** MISC
*** TODO [#1] Scattered Minds, Gabor Mate
<2024-08-10 Sat> I'm almost done this book, it's great
<2024-04-02 Tue> Up to page 239
<2024-04-02 Tue> I especially liked the line  on page 208
where the author mentioned "can avoid painful scenes if they
learn to respect the motive instead of fixating on the outcome."
I've dealt with similar issues, but I like the phrasing.
I try very much when dealing some form of criticism to lead with
a positive statement.  Growing up, I believe I was taught this,
but until the last 7 years or so, I hadn't understood the affect
of a person not doing this.
<2024-01-11 Thu> up to page 193.
I find this book much more fascinating than I though I would have.
A quote i like is "whenever we ascribe a motive to another person, 'you are doing this because...'
we discard curiosity and immobalize compassion."
For reasons I won't write publicly, I have observed this, but damn that sentence was written well.
<2023-12-17 Sun> Up to page 104, this is getting interesteing
I'm only reading this book because Teresa has our kids tested for ADHD
<2023-12-17 Sun> Page 77
*** TODO [#2] Thinking Fast and Slow, Daniel Kahneman
**** <2024-09-18 Wed>
Introdiuction
page 1 - "Because it's much easier, as well as far more enjoyable
to indentify and label the mistakes of others than to recognize our own"
page 2 - "You believe you know what goes on in your mind... most impressions
and thoughts arise in your conscience experience without you knowing
how they got there" Reminds me of what I've been learning about mindfullness,
and about machine learning
page 6 - "We invented questions and jointly examined our intuitive answers"
regarding intuition for statistics, I doubt that we really have that.
Hell, Anscombe's quartert show's how little mean and variance _can_ mean
page 8 - we documented systematic errors in the thinking of normal people
and we traced these errors to the design of the machinery of cognition
rather than the corruption of thought by emotion"
"people tend to assess the relative importance of issues by the ease
with which they are retrieved from memory, largely determined
by the extent of the coverage in the media"
page 9 - "a recurrent theme in this book is that luck plays a large
role in every story of success"
page 11 - "the accurate intuitions of experts are better explained by
the effects of prolonged practice than by heuristics"
I like the example of the firefighter that sensed danger, and ordered
the team to escape, without himself knowing exactly why.  This also
reminds me of machine learning
page 12 - "when faced with a difficult question, we often answer an
easier one instead, usually without noticing the substitution"
Page 13 - system 1 and system 2 - haha regarding david and his wife "Here!"
"System 1 os more influential than your experience tells you"
"the main theme of part 3, which describes a puzzling limitation of our
mind: our excessive confidence in what we believe we know, and our
appararent inability to acknowledge the full extent of our ignorance
and the uncertainty of the world we live in"
"Illusionary certainty of highsight" - haha captain hindsight
page 14 "part 4 the assumption that economic agents are rational"
"address several ways human choices deviate from the rules of rationality
I forget the page, but the author talks about how a 4 year old, in their
native language, understands the rules of grammar, but doesn't know
that their are rules, nor can they articulate the rules.
This reminds me of reflecting on my confusion with ESL adults, when
I was a kid, and how they didn't use articles in the correct context.
I now, can describe when to use a definite article vs an indefinite article,
but I can't prescribe an exhaustive set of rules to provide to an ESL person.

Part 1 - page 19 " A premonition of what she was going to do next came
to mind automatically and effortlessly. You did not intend to assess
her mood or anticipate what she might do...it just happened to you.  It
was an instance of fast thinking"
page 20 - regarding the multiplication, it's interesting.  I used to
like doing mental math as a kid, and now I can't be bothered, for reasons
that I could program a computer to do it.  I'd be much happier
writing my own implementation of multiplication function, given an arbtrary
base, than to manualy do the calculation.  I think about this in terms
of white box and black box, and how a friend of mine in junior high
 used to say "why do I need to learn how to do the operation
 when my calculator can do it for me.  My oldest child ask a similar
 question recently, but his version of the question seemed to be sparked
 from genuine curiousity, rather than one of laziness.  It sparked
 a good conversation between my kids and me.  I explained that understanding
 things as a black box is good, because it allows us to focus on the important
 aspects, and to ignore details, however, we still should be able to open
 the white box, and derive the machinery from scratch --- and then, we can
 treat it as a black box.  reminds me of what I did with the cross product proof,
 that for some reason no one else in the world has done, nor cared about, but
 somehow they got the answer correct.

"You felt the burden of holding much memory in your head, as you needed
to keep track of where you were and of where you were going, while holding
onto the intermediate result"  I find this fascinating.  Firstly, before I read
Strunk and White, and before I learned Latin, I would not have noticed the
two "of where"s, and if I were to write the sentence, I would have not said
the second "of".  But also, the content of his sentence reminds me a lot
about computer program, best exemplified by the towers of hanoi puzzle,
and how amazed I was the first time I saw a program of like 6 lines
that could solve it for any number of disks.

Regarding System 1, the description at the bottom of page 20 sounds
somewhat similar to ML systems, in that they cannot describe how
they came to their solutions.  Reminds me of Stockfish vs Google's ML
chess engine.  Stockfish was written by chess experts, and it can explain
the choices it makes based off of rationality coded in my experts.
Whereas, from what I understand, Google's engine was meant to learn
games, and although it was the best engine in the world, it couldn't explain
why it made the sequence of moves it would do, it just estimated that
they were optimal.  From what I've heard Magnus Carlsen say, he
said that the ML system did excellent sacrificies that he would have never
thought of.

I find that interesting from my own playing of chess.  There are so many
possible moves to make, I have trouble deciding what to pay attention
to and what to ignore; perhaps exascerbated by my aphantasia.
But, perhaps, through enough expercience, an expert develops an
intuitive sense, as the author had mentioned earlier in the book
with the firefighter.

As a parent and as a teacher (or having patience with an ESL person
who struggles with usage of articles), that makes me curious, how does one
teach, or articulate, the resulting expertise?  I find with my kids at least,
that when one of my children asks to go on a walk on the concrete without shoes,
telling him "no" would not impart any knowledge.  So I tell him I advise
against it, but allow him to anyways.  Halfway through that walk he told
me his feet hurt.

On page 21, I find his description of the interaction between system 1 and
system 2 interesting.

on page 22, "System 1... has also learned skills such as reading and
understanding the nuances of social interactions".  I find that interesting,
especially when interacting with people who, politely, have less than optimal
skills in that area.  Reminds me of me explaining to a person "my way" of
remembering to badge out.  Step 1, recoginize that I am leaving.  Step 2,
look at my list of things I must do before I leave.  Look at the list,
there's only one thing on it, badge out.  Step 3, execute badge out.
I say that as a joke, but it reminds of when I was a kid, and a friend's
mother would say "Bill remember when you go home to tell your mother X"
Hours later, I'd go home.  Later that night, the phone would ring,
and my mother answer, but then start talking to me saying "Bill,
was there something you were supposed to tell to me when you got home?"
And I'd say, "Yes, my friend's mom said to tell you X"
I could remember what the content was, but I could not remember
a trigger, or an event perhaps, to trigger telling my mom.
It's funny too, because when I was a kid, as I said above, I could do
mental math very quickly, and raised my hand first frequently.
If a fellow student asked me how I did it so quickly, I probably explained
it like "remember the rules, do the multiplication, hold onto the result,
and complete the algorithm".  And I would think they weren't trying hard
enough, and I'd be confused.  It's interesting to think of those types of events
in my own explanations or in my own judgements, espicially given that I have
aphanasia, and no matter how much someone tells me to picture something
in my mind, which comes naturally to them, I likely never will be able to.
**** <2024-09-19 Thu>

on page 23, the author is talking a lot more about system 2.  I found interesting
the part where he said that system 2 has some ability to change the way that system
1 operates.  (Think reminds me of a book I've been reading called "The Power of Habit"

"It is the mark of effortful activities that they interfere with each other which
is why it is difficult or impossible to conduct several at once"
This one means a lot to me.  Perhaps I default to system 2 too much.  Cooking
in particular has been difficult for me (which is why I now love crock pots),
in particular because I've only started doing it in earnest over the past two years,
I am the lovable father of three doting children who want to share their every thought
with me (while I'm cooking), and cooking requires a bit of planning, knoweldge,
and concurrent execution.
But this also brings up stuff at work, in particular what Paul Graham describes for
programmers as "flow" https://paulgraham.com/makersschedule.html
When I get interrupted at work, I lose my focus.  The worst part is in open offices,
where I had been head of the room, and I'd be interrupted verbally like 20 times per day,
and also with a stream of emails.  The apprehension of anticipation made it so I infrequently
was able to focus at all.
I had been telling my kids "I can only do one or two things at a time"  That hasn't effectively
communicated my message to them.  Now I tell them "I can only do one thing at a time"

Haha, the author mentioned the Invisible Gorilla.  I saw that video and I did not see
the person in the gorilla mask.

On page 25 "The division of labor between System 1 and System 2 is highly efficient:
it minimizes effort and opmitizing performance"  I find this fascinating again
because of the book The Power of Habit.

On a complete tangeant.  Last night while writing these notes, it was on my macbook pro
while I was sitting in bed.  I prefer a different keyboard than the macbook pro's, as I would
type faster on it.  However, last night I used the less efficient keyboard for my typing.
I say this because while typing in quotes, I could only remember a few words of the quote
before I'd have to pick the book up again.  Tonight, I am typing on my preferred keyboard,
and I'm finding I'm remembering about half of the quoted sentences word for word before
having to look at the book again.

The illusion on page 27 is nuts.  Even though System 2 knows the lines are the same
length, System 1 does not believe it.

I like the phrase "cognitive illusion"

On page 28, "the best we can do is compromise: learn to recoginize situations
in which mistakes are likely and try harder to avoid making significant
mistakes when the stakes are high"

On page 30 "This is your system 1 talking, slow down and let your system 2 take control"

I found page 31-34 quite boring.  I didn't want to get index cards, and I think
I understood his point.  But i liked the end of 35, and the talk on page 36 to count
all of the f's.  I will do this task, as on page 36 he describes it as "executive control...
the adoption and termination of task sets... which serves executive function"

I counted 26 f's, but oh boy that was unpleasant.  I found what he said on page 25
to be true though "the law asserts that if there several ways of achieving the same goal,
people will eventually gravitate to the least demanding course of action.

When I was counting the f's at first I was reading the words in my head and paying attention
to the f's.  But then I realized, that although I was just incrementally one number, which
is much easier than the add 3, I was forgetting what the number was, just like when
I swim laps I forget what lap number I'm on (am I about to start lap 9 or am I finishing lap 9)
Either way I tried to shut my brain off and just look for f's without reading the words,
it helped some but I couldn't help but recognize the words.  So I started running my fingers
though the page, trying to just see the letters and count.  It required the least effort,
and it was the easiest to hold onto the accumulated value.  (regarding swimming laps,
turns out I gravitated towards an easier way of counting laps.  Count half laps,
if I have an even number in my head, I'm starting on the first direction.  If I have an
odd number in my head, I'm returning to my starting point.  Take final result and divide
by 2 and I have my laps)

On page 38
"She did not forget about the meeting. She was completely focused on something else when
the meeting was set and she just didn't hear you"  haha I've had times where people tell
me something when I'm focused on something else, and I didn't even recognize that the spoke.
When they then call my name and ask if I was listening, it's like my brain stored onto
it and replays it, and I can repeat their words back to them, although before they broke
my concentration I had no system 2 recognition 1) that the spoke 2) that the were speaking
to me

*** TODO [#2] FLOW, Mihaly Csikszentmihalyi
*** DONE Everything is Fucked, Mark Manson
<2023-12-17 Sun> Finished.
<2023-11-24 Fri> Up to Page  188
*** TODO Digital Avionics Handbook
**** Current page
67
**** <2023-11-02 Thu> page 108

** Religion
*** [#3] The Complete Guide to the Bible, Stephen M. Miller
*** The Good News Bible

** How to Become Alex Jones
*** TODO [#10] None Dare Call it a Conspiracy
