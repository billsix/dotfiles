C-x s  - Save
C-x f  - Open File
C-x c  - Close File

C-x 3 - Open new window, split vertically
C-x 2 - Open new window, split horizontally
C-x o - Switch windows
C-x 0 - Close current window

C-s - search forward
C-r - search backwards

C-a - move cursor to beginning of line
C-e - move cursor to the end of the line

M-b  - move cursor back one word
M-f  - move cursor forward one word

C-M-b - go backwards to the matching brace/parenthesis
C-M-f - go forwards to the matching brace/parenthesis


C-space - start marking region
        -  move cursor around to mark region
M-w  - copy currently highlighted region
C-w  - cut currently highlighted region
C-y - paste
C-k - cut from the cursor to the end of the line

C-l - wherever the cursor is is the file, move that to the middle of
      the screen, vertically.  Press it a second time to make it go
      to the top of the screen

M-x - prompt for emacs command, typed in the bottom of the screen
  on prompt, type apropos and hit enter.  This is a search for functions
  on prompt, type cd and hit enter.  This changes the current working directory
  on prompt, type compile and hit enter.  This calls make in the current working directory
  on prompt, type ispell to spell checking
  on prompt, type grep to search filesystem at current working directory
  on prompt, type gdb, and then enter the program to be debugged.
     once in gdb
       set args
         to set the args
       run
         to run the program
       n
         next
       s
         step
       bt
         back trace
       up
         go up once stack frame
       down
         go down one stack frame
       c
         continue (until next breakpoint
       C-x-a-b
         set breakpoint
       break main
         set breakpoint at function main
       <enter>
         just hit enter to repeat the previous command
       to scroll through history, instead of using the up arrow and down arrow,
         hold control and use those arrows

       set disassemble-next-line on
         - do this first
         - enables printing of assembly instructions when stepi is input
       x/20x $sp
         - print stack, from the stack pointer, 20 words --
         -last x means hex.  use d for signed ints, u for unsigned ints
       p $w1
         -print contents of register, in this case, $w1
       info registers
         -print all registers -
       stepi
         -step instruction
       disassemble
         -show a bunch of instructions around the $pc
       disassemble [functionname]
         -show assembly of entire procedure
       info frame
         -shows the local variables
       up
         - go up a stack frame
       down
         - go down a stack frame



M-/ - word complete, kind of like autocomplete, but less smart.
    - keep holding M and type / to try new completions


C-x ( - Start recording macro
C-x ) - Stop recording macro
C-x e - replay macro


# To refresh packages
M-x package-refresh-contents
M-x list-packages
  find packages, press u to mark up upgrade, x to execute
